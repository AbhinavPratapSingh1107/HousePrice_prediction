# -*- coding: utf-8 -*-
"""college p.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A5AwQXsPeriTq3wWP6uipcpVYVHFCjXn
"""

# import library
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# import data
house = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/Boston.csv')

# view data
house.head()

# info of data
house.info()

# summary statistics
house.describe()

# check for missing value
house.isna().sum()

# check for categories
house.nunique()

# visualize pairplot
sns.pairplot(house)

# columns name
house.columns

# define y
y = house['MEDV']

# define X
X = house[['CRIM', 'ZN', 'INDUS', 'CHAS', 'NX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT']]

# split data
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=.30, random_state=2529)

# verify shape
X_train.shape, X_test.shape, y_train.shape, y_test.shape

# select model
from sklearn.linear_model import LinearRegression
model = LinearRegression()

# train model
model.fit(X_train, y_train)

# predict with model
y_pred = model.predict(X_test)

# model evaluation
from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, mean_squared_error

# model MAE
mean_absolute_error(y_test,y_pred)

# model MAPE
mean_absolute_percentage_error(y_test, y_pred)

# model MSE
mean_squared_error(y_test, y_pred)

# future prediction
sample = house.sample()
sample

# define X_new
X_new = sample.loc[:,X.columns]
X_new

# predict for X_new
model.predict(X_new)

